version: 2.1

# 実行環境の定義
executors:
  test_default:
    working_directory: ~/project
    docker:
    - image: circleci/python:3.7
      environment:
        PYTHONDONTWRITEBYTECODE: 1
        PYTHONUNBUFFERED: 1
        TZ: Asia/Tokyo
    - image: circleci/postgres:12
      environment:
        POSTGRES_USER: postgres
        POSTGRES_DB: postgres
        TZ: Asia/Tokyo

  deploy_default:
    working_directory: ~/project
    docker:
    - image: circleci/python:3.7
      environment:
        PYTHONDONTWRITEBYTECODE: 1
        PYTHONUNBUFFERED: 1
        TZ: Asia/Tokyo

# 実行コマンドの定義
commands:
  save_python_package:
    description: "pip install したpackageをキャッシュする"
    steps:
      - save_cache:
          name: Save Python Package
          key: myproject-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
          - /usr/local/bin
          - /usr/local/lib/python3.7/site-packages
  restore_python_package:
    description: "pip install したpackageのキャッシュを読み込む"
    steps:
      - restore_cache:
          name: Restore Python Package
          keys:
          - myproject-{{ .Branch }}-{{ checksum "requirements.txt" }}
          - myproject
  pip_install:
    description: "pip install を実行"
    steps:
      - run: 
          name: pip install
          command: pip3 install -r requirements.txt --user

# ジョブの定義
jobs:
  build:
    executor: test_default
    steps:
      - checkout
      - restore_python_package
      - pip_install
      - save_python_package

      - run:
          name: test
          command: echo ${ENV} > ~/.env  
                   python3 manage.py test
    
  deploy:
   executor: deploy_default
   steps:
     - checkout
     # circleciに登録した秘密鍵のfingerprint
     - add_ssh_keys:
         fingerprints:
         - 0b:99:30:a4:87:58:c7:76:99:5d:3a:56:91:4e:1d:41
     # ssh実行時の対話回避のため、key-scanを実行
     - run:
         name: Start ssh-key-scan
         command: ssh-keyscan ${HOST_NAME} >> ~/.ssh/known_hosts
     - run:
         name: Start install rsync
         command: sudo apt install -y rsync
     # checkoutしたコードをデプロイ先に同期する
     # Dockerfile, .circleciは使わないので除外する
     - run:
         name: Start rsync
         command: rsync -av --exclude='Dockerfile' --exclude='.ssh' --exclude='.git'
                  --exclude='.circleci' . ${USER_NAME}@${HOST_NAME}:/home/user/src

workflows:
  version: 2.1
  build_and_deploy:
    jobs:
    - build
    - deploy:
        filters:
          branches: #masterブランチへのpushがあった時のみ
            only: master
        requires:
        - build